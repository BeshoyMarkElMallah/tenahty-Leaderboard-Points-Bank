import styles from "./index.module.css";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import logo from "../../public/logo.jpeg";
import Image from "next/image";
import { trpc } from "../utils/trpc";
import { Loading } from "@geist-ui/core";
import { Grid, Paper, Table, TableBody, TableCell, TableContainer } from "@mui/material";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";
// import Card from "@geist-ui/core/esm/card/card";

const Home: NextPage = () => {
  const { data: PrepScores, isLoading } = trpc.scores?.prepScores.useQuery();
  const { data: SecScores } = trpc.scores?.secScores.useQuery();
  const dataprep = [
    { property: "", description: "", type: 'secondary | warning', default: '-' }
  ]
  const datasec = [
    { property: "", description: "", type: 'secondary | warning', default: '-' }
  ]


  if (isLoading) return <><Loading type="warning">Loading</Loading></>
  return (
    <>
      <Head>
        <title>تيناهتي 5 </title>
        <meta name="description" content="Generated by create-t3-app" />
        <meta httpEquiv="refresh" content="20" />
        <link rel="icon" href="/logo.jpeg" />
      </Head>


      <Grid container spacing={2}>
        <Grid item xs={4.5}>

        </Grid>
        <Grid item xs={6}>
          <Image src={logo} alt="tenahty5" width={400} height={400} />
        </Grid>
        <Grid item xs={6}>
          <h2 style={{ textAlign: 'center',fontSize:50,fontWeight:"bold" }}>مجموعات اعدادي</h2>
        </Grid>
        <Grid item xs={6}>
          <h2 style={{ textAlign: 'center', fontSize:50,fontWeight:"bold"}} >مجموعات ثانوي</h2>
        </Grid>
        <Grid item xs={1}>

        </Grid>
        <Grid item xs={4}>
          <TableContainer component={Paper}>
            <Table aria-label="simple table">
              <TableHead>
                <TableRow>
                  <TableCell style={{ textAlign: 'center',fontSize:50,fontWeight:"bold" }}>النقاط</TableCell>
                  <TableCell style={{ textAlign: 'center',fontSize:50,fontWeight:"bold" }}>المجموعة</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {PrepScores?.map((score: any, index: any) => {
                  return <>
                  <TableRow>
                    <TableCell style={{ textAlign: "center",fontSize:50,}}>{score.points}</TableCell>
                    <TableCell style={{ textAlign: "center",fontSize:50,}}>{score.name}</TableCell>
                  </TableRow>
                  </>
                })}
              </TableBody>

            </Table>
          </TableContainer>
        </Grid>
        <Grid item xs={2}>

        </Grid>
        <Grid item xs={4}>
          <TableContainer component={Paper}>
            <Table aria-label="simple table">
              <TableHead>
                <TableRow>
                  <TableCell style={{ textAlign: 'center',fontSize:50,fontWeight:"bold" }}>النقاط</TableCell>
                  <TableCell style={{textAlign: 'center',fontSize:50,fontWeight:"bold" }}>المجموعة</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {SecScores?.map((score: any, index: any) => {
                  return <>
                  <TableRow>
                    <TableCell style={{ textAlign: "center",fontSize:50,}}>{score.points}</TableCell>
                    <TableCell style={{ textAlign: "center",fontSize:50,}}>{score.name}</TableCell>
                  </TableRow>
                  </>
                })}
              </TableBody>

            </Table>
          </TableContainer>
        </Grid>
      </Grid>

      {/* <Grid.Container gap={2} justify="center" height="100px">
      <Grid xs={24}>
          <Image src={logo} alt="tenahty5" width={500} height={500} />
        </Grid>
        {/* <Grid xs={12}>
          <Text h1>اعدادي</Text>
        </Grid>
        <Grid xs={12}>
          <Text h1 >ثانوي</Text>
        </Grid> */}
      {/* {PrepScores?.map((score: any, index: any) => {
          dataprep.push({ property: score.points, description: score.name, type: 'secondary | warning', default: '-' })
          return <>
          <Grid xs={6} key={index}>
            <Card>
              <Text h4>{score.name}</Text>
              <Text h4>{score.points}</Text>
            </Card>
          </Grid>
          </>;
        })} */}
      {/* {SecScores?.map((score: any, index: any) => {
          datasec.push({ property: score.points, description: score.name, type: 'secondary | warning', default: '-' })
          return <>
          <Grid xs={6} key={index}>
            <Card>
              <Text h4>{score.name}</Text>
              <Text h4>{score.points}</Text>
            </Card>
          </Grid>
          </>;
        })} */}
      {/* <Grid xs={10}>
          <Card width="50%">
            <Table data={dataprep}>
            <Table.Column prop="property" label="النقاط" />
            <Table.Column prop="description" label="المجموعة" />
          </Table>
          </Card>
          
        </Grid>
        <Grid xs={10}>
          <Table data={datasec}>
            <Table.Column prop="property" label="النقاط" />
            <Table.Column prop="description" label="المجموعة" />
          </Table>
        </Grid> */}

      {/* </Grid.Container> */}


    </>
  );
};

export default Home;
