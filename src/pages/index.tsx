import { type NextPage } from "next";
import Head from "next/head";
import logo from "../../public/logo.png";
import Image from "next/image";
import { trpc } from "../utils/trpc";
import { Loading } from "@geist-ui/core";
import { Box, Card, Grid, Paper, Table, TableBody, TableCell, TableContainer } from "@mui/material";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";
import { red, purple } from "@mui/material/colors";
import { Container } from "@mui/system";
import background from "../../public/background.png";

const Home: NextPage = () => {
  const { data: PrepScores, isLoading } = trpc.scores?.prepScores.useQuery();
  const { data: SecScores } = trpc.scores?.secScores.useQuery();
  const dataprep = [
    { property: "", description: "", type: 'secondary | warning', default: '-' }
  ]
  const datasec = [
    { property: "", description: "", type: 'secondary | warning', default: '-' }
  ]


  if (isLoading) return <><Loading type="warning">Loading</Loading></>
  return (
    <>
     {/* <Image
     style={{zIndex:0}}
        src={background}
        fill={true}
        alt={"Background Image"}
      /> */}
      <Head>
        <title>تيناهتي 6 </title>
        <meta name="description" content="Generated by create-t3-app" />
        {/* <meta httpEquiv="refresh" content="20" /> */}
        <link rel="icon" href="/logo.png" />
      </Head>

     

      <Grid container spacing={2}>
        <Grid item xs={5}>
        </Grid>
        <Grid item xs={6}>

        </Grid>
        <Grid item xs={6}>
    
          <h2 style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}> مجموعات اعدادي</h2>
        </Grid>
        <Grid item xs={6}>
  
          <h2 style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }} >مجموعات ثانوي</h2>
        </Grid>
        <Grid item xs={1}>
        </Grid>
        <Grid item xs={3.9}>
          <TableContainer component={Paper}>
            <Table aria-label="simple table">
              <TableHead>
                {PrepScores?.map((score: any, index: any) => {
                  if (score.isShown === true && index === 0) {

                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>النقاط</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>اللون</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>المجموعة</TableCell>
                      </TableRow>
                    </>
                  } else if (score.isShown === false && index === 0) {
                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>اللون</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>المجموعة</TableCell>
                      </TableRow>
                    </>
                  }

                })}

              </TableHead>
              <TableBody>
                {PrepScores?.map((score: any, index: any) => {
                  if (score.isShown === true) {

                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.points}</TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}><Box sx={{ color: score.color, backgroundColor: score.color }}>t</Box></TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.name}</TableCell>
                      </TableRow>
                    </>
                  } else {
                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}><Box sx={{ color: score.color, backgroundColor: score.color }}>t</Box></TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.name}</TableCell>
                      </TableRow>
                    </>
                  }

                })}
              </TableBody>

            </Table>
          </TableContainer>
        </Grid>
        <Grid item xs={2.4}>
          <Image src={logo} alt="tenahty5" width={300} height={200} />
          <h1 style={{ textAlign: "center", fontSize: 42, }}>بنك تيناهتي</h1>
          <h1 style={{ textAlign: "center", fontSize: 40, }}>Tenahty Bank</h1>
        </Grid>
        <Grid item xs={4.2}>
          <TableContainer component={Paper}>
            <Table aria-label="simple table">
              <TableHead>
                {SecScores?.map((score: any, index: any) => {
                  if (score.isShown === true && index === 0) {

                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>النقاط</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>اللون</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>المجموعة</TableCell>
                      </TableRow>
                    </>
                  } else if (score.isShown === false && index === 0) {
                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>اللون</TableCell>
                        <TableCell style={{ textAlign: 'center', fontSize: 42, fontWeight: "bold" }}>المجموعة</TableCell>
                      </TableRow>
                    </>
                  }

                })}

              </TableHead>
              <TableBody>
                {SecScores?.map((score: any, index: any) => {
                  if (score.isShown === true) {

                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.points}</TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}><Box sx={{ color: score.color, backgroundColor: score.color }}>t</Box></TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.name}</TableCell>
                      </TableRow>
                    </>
                  } else {
                    return <>
                      <TableRow>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}><Box sx={{ color: score.color, backgroundColor: score.color }}>t</Box></TableCell>
                        <TableCell style={{ textAlign: "center", fontSize: 42, }}>{score.name}</TableCell>
                      </TableRow>
                    </>
                  }

                })}
              </TableBody>

            </Table>
          </TableContainer>
        </Grid>
      </Grid>




    </>
  );
};

export default Home;